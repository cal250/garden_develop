/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerTvSection".
 */
export type InnerTvSection =
  | {
      youtubeVideos?: InnerTvYoutubeVideo;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerTvYoutubeVideo".
 */
export type InnerTvYoutubeVideo =
  | {
      youtubeLink: string;
      title: string;
      thumbnail: string | Media;
      description?: string | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerAcademySection".
 */
export type InnerAcademySection =
  | {
      title?: string | null;
      subTitle?: string | null;
      policy?: (string | null) | Policy;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admin: AdminAuthOperations;
    creator: CreatorAuthOperations;
  };
  collections: {
    ecosystem: Ecosystem;
    tag: Tag;
    zone: Zone;
    tagType: TagType;
    admin: Admin;
    colorTemplate: ColorTemplate;
    dimension: Dimension;
    invites: Invite;
    creator: Creator;
    creatorType: CreatorType;
    specialeco: Specialeco;
    wellgorithmAction: WellgorithmAction;
    cocoon: Cocoon;
    wellgorithmType: WellgorithmType;
    seedWellgorithm: SeedWellgorithm;
    sproutWellgorithm: SproutWellgorithm;
    innerAIHumometer: InnerAIHumometer;
    comment: Comment;
    commentType: CommentType;
    garden: Garden;
    faq: Faq;
    faqType: FaqType;
    innerTVType: InnerTVType;
    innerTv: InnerTv;
    emailTemplates: EmailTemplate;
    policy: Policy;
    bannerAd: BannerAd;
    footer: Footer;
    media: Media;
    platformIcon: PlatformIcon;
    color: Color;
    message: Message;
    innerAcademy: InnerAcademy;
    innerDirectory: InnerDirectory;
    stack: Stack;
    stackIcon: StackIcon;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    ecosystem: EcosystemSelect<false> | EcosystemSelect<true>;
    tag: TagSelect<false> | TagSelect<true>;
    zone: ZoneSelect<false> | ZoneSelect<true>;
    tagType: TagTypeSelect<false> | TagTypeSelect<true>;
    admin: AdminSelect<false> | AdminSelect<true>;
    colorTemplate: ColorTemplateSelect<false> | ColorTemplateSelect<true>;
    dimension: DimensionSelect<false> | DimensionSelect<true>;
    invites: InvitesSelect<false> | InvitesSelect<true>;
    creator: CreatorSelect<false> | CreatorSelect<true>;
    creatorType: CreatorTypeSelect<false> | CreatorTypeSelect<true>;
    specialeco: SpecialecoSelect<false> | SpecialecoSelect<true>;
    wellgorithmAction: WellgorithmActionSelect<false> | WellgorithmActionSelect<true>;
    cocoon: CocoonSelect<false> | CocoonSelect<true>;
    wellgorithmType: WellgorithmTypeSelect<false> | WellgorithmTypeSelect<true>;
    seedWellgorithm: SeedWellgorithmSelect<false> | SeedWellgorithmSelect<true>;
    sproutWellgorithm: SproutWellgorithmSelect<false> | SproutWellgorithmSelect<true>;
    innerAIHumometer: InnerAIHumometerSelect<false> | InnerAIHumometerSelect<true>;
    comment: CommentSelect<false> | CommentSelect<true>;
    commentType: CommentTypeSelect<false> | CommentTypeSelect<true>;
    garden: GardenSelect<false> | GardenSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    faqType: FaqTypeSelect<false> | FaqTypeSelect<true>;
    innerTVType: InnerTVTypeSelect<false> | InnerTVTypeSelect<true>;
    innerTv: InnerTvSelect<false> | InnerTvSelect<true>;
    emailTemplates: EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
    policy: PolicySelect<false> | PolicySelect<true>;
    bannerAd: BannerAdSelect<false> | BannerAdSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    platformIcon: PlatformIconSelect<false> | PlatformIconSelect<true>;
    color: ColorSelect<false> | ColorSelect<true>;
    message: MessageSelect<false> | MessageSelect<true>;
    innerAcademy: InnerAcademySelect<false> | InnerAcademySelect<true>;
    innerDirectory: InnerDirectorySelect<false> | InnerDirectorySelect<true>;
    stack: StackSelect<false> | StackSelect<true>;
    stackIcon: StackIconSelect<false> | StackIconSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (Admin & {
        collection: 'admin';
      })
    | (Creator & {
        collection: 'creator';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CreatorAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ecosystem".
 */
export interface Ecosystem {
  id: string;
  name?: string | null;
  description?: string | null;
  image?: (string | null) | Media;
  icon?: (string | null) | Media;
  rank?: number | null;
  colorTemplate?: (string | null) | ColorTemplate;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  tag?: (string | Tag)[] | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tag".
 */
export interface Tag {
  id: string;
  name: string;
  description?: string | null;
  type?: (string | null) | TagType;
  tagTitles?:
    | {
        tagTitle?: string | null;
        id?: string | null;
      }[]
    | null;
  creator?: (string | null) | Creator;
  rank?: number | null;
  sentiment?: ('Positive' | 'Negative' | 'Neutral' | 'Humor' | 'Rehab') | null;
  icon?: (string | null) | Media;
  image?: (string | null) | Media;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tagType".
 */
export interface TagType {
  id: string;
  name?: string | null;
  key?: string | null;
  description?: string | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin".
 */
export interface Admin {
  id: string;
  role: 'admin';
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creator".
 */
export interface Creator {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  prefferedPassword?: string | null;
  welcomeMessage?: string | null;
  inspiration?: string | null;
  avatar?: (string | null) | Media;
  username?: string | null;
  creatorType?: (string | CreatorType)[] | null;
  germinatedBy?: (string | null) | Creator;
  rank?: number | null;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  lastLoggedInOn?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creatorType".
 */
export interface CreatorType {
  id: string;
  name?: string | null;
  key?: string | null;
  description?: string | null;
  makeDefault?: boolean | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colorTemplate".
 */
export interface ColorTemplate {
  id: string;
  name?: string | null;
  image?: (string | null) | Media;
  icon?: (string | null) | Media;
  rank?: number | null;
  default_monochrome?: ('Yes' | 'No') | null;
  colorGroup?: (string | Color)[] | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color".
 */
export interface Color {
  id: string;
  colorName: string;
  color: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zone".
 */
export interface Zone {
  id: string;
  name?: string | null;
  description?: string | null;
  image?: (string | null) | Media;
  icon?: (string | null) | Media;
  rank?: number | null;
  usage?: number | null;
  ecosystem?: (string | null) | Ecosystem;
  colorTemplate?: (string | null) | ColorTemplate;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  weedSeedPreference?: ('Weed' | 'Seed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dimension".
 */
export interface Dimension {
  id: string;
  name?: string | null;
  description?: string | null;
  collectionOfTags?: (string | Tag)[] | null;
  rank?: number | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  slider?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invites".
 */
export interface Invite {
  id: string;
  firstName: string;
  lastName: string;
  email: string;
  prefferedPassword: string;
  inspiration: string;
  approved?: ('Yes' | 'No') | null;
  rejected?: ('Yes' | 'No') | null;
  rejectedReason?: string | null;
  creatorType?: (string | CreatorType)[] | null;
  dateRequested?: string | null;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  creator?: (string | null) | Creator;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "specialeco".
 */
export interface Specialeco {
  id: string;
  name?: string | null;
  shortDescription?: string | null;
  longDescription?: string | null;
  icon?: (string | null) | Media;
  image?: (string | null) | Media;
  rank?: number | null;
  ecosystem?: (string | null) | Ecosystem;
  zoneSize?: number | null;
  iboundaryDescription?: string | null;
  oboundaryDescription?: string | null;
  starsDescription?: string | null;
  allowPrivacy?: ('Yes' | 'No') | null;
  wellgorithmActions?:
    | {
        actions?: (string | null) | WellgorithmAction;
        id?: string | null;
      }[]
    | null;
  usageCount?: number | null;
  enabled?: ('Yes' | 'No') | null;
  compulsory?: ('Yes' | 'No') | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  updatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wellgorithmAction".
 */
export interface WellgorithmAction {
  id: string;
  name?: string | null;
  type?: ('share' | 'sprout') | null;
  icon?: (string | null) | Media;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cocoon".
 */
export interface Cocoon {
  id: string;
  specialeco?: (string | null) | Specialeco;
  creator?: (string | null) | Creator;
  name?: string | null;
  description?: string | null;
  welcomeMessage?: string | null;
  image?: (string | null) | Media;
  landscape?: (string | null) | Media;
  thumbnail?: (string | null) | Media;
  icon?: (string | null) | PlatformIcon;
  rank?: number | null;
  step?: number | null;
  zones?:
    | {
        zone?: (string | null) | Zone;
        position?: number | null;
        id?: string | null;
      }[]
    | null;
  colorTemplate?: (string | null) | ColorTemplate;
  innerBoundaries?:
    | {
        innerTag?: (string | null) | Tag;
        position?: number | null;
        id?: string | null;
      }[]
    | null;
  outerBoundaries?:
    | {
        outerTag?: (string | null) | Tag;
        position?: number | null;
        id?: string | null;
      }[]
    | null;
  stars?:
    | {
        starTag?: (string | null) | Tag;
        position?: number | null;
        id?: string | null;
      }[]
    | null;
  privacy?: ('Public' | 'Private') | null;
  monochrome?: ('Yes' | 'No') | null;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platformIcon".
 */
export interface PlatformIcon {
  id: string;
  tag?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    icon?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wellgorithmType".
 */
export interface WellgorithmType {
  id: string;
  name: string;
  numberOfTitles: number;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seedWellgorithm".
 */
export interface SeedWellgorithm {
  id: string;
  titles?: string[] | null;
  titles_concat?: string[] | null;
  wellgorithmType?: (string | null) | WellgorithmType;
  sub_title?: string | null;
  icon?: (string | null) | Media;
  image?: (string | null) | Media;
  intention?: string | null;
  points?: number | null;
  pointsType?: (string | null) | Tag;
  rank?: number | null;
  usageCount?: number | null;
  ecosystem?: (string | null) | Ecosystem;
  zone?: (string | Zone)[] | null;
  cocoon?: (string | null) | Cocoon;
  wellgorithmActions?:
    | {
        actions?: (string | null) | WellgorithmAction;
        id?: string | null;
      }[]
    | null;
  stack?: (string | null) | Stack;
  adminCreated?: ('Yes' | 'No') | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  deleted?: ('Yes' | 'No') | null;
  deletedOn?: string | null;
  creator?: (string | null) | Creator;
  year?: string | null;
  isMaster?: boolean | null;
  masterSeed?: (string | null) | SeedWellgorithm;
  symbol?: ('large' | 'small') | null;
  weedSeedPreference?: ('Weed' | 'Seed') | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stack".
 */
export interface Stack {
  id: string;
  name?: string | null;
  leftIcon?: (string | null) | StackIcon;
  tags?: (string | Tag)[] | null;
  rightIcon?: (string | null) | StackIcon;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stackIcon".
 */
export interface StackIcon {
  id: string;
  name?: string | null;
  icon?: (string | null) | Media;
  type?: ('before' | 'after') | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sproutWellgorithm".
 */
export interface SproutWellgorithm {
  id: string;
  seedWelgorithm?: (string | null) | SeedWellgorithm;
  intention?: string | null;
  title?: string | null;
  subTitle?: string | null;
  contents?:
    | {
        content?: string | null;
        id?: string | null;
      }[]
    | null;
  innerAIHumometer?: (string | null) | InnerAIHumometer;
  icon?: (string | null) | Media;
  image?: (string | null) | Media;
  points?: number | null;
  pointsType?: (string | null) | Tag;
  stack?: (string | null) | Stack;
  colorTemplate?: (string | null) | ColorTemplate;
  weatherTag?: (string | null) | Tag;
  generalTags?: (string | Tag)[] | null;
  privacy?: ('Public' | 'Private') | null;
  contributors?: (string | Creator)[] | null;
  rank?: number | null;
  creator?: (string | null) | Creator;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  deleted?: ('Yes' | 'No') | null;
  deletedOn?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerAIHumometer".
 */
export interface InnerAIHumometer {
  id: string;
  sproutWellgorithm?: (string | null) | SproutWellgorithm;
  name?: string | null;
  bigIdea?: number | null;
  mainPoints?: number | null;
  factNFlourishes?: number | null;
  editing?: number | null;
  finalPolish?: number | null;
  average?: number | null;
  createdOn?: string | null;
  creator?: (string | null) | Creator;
  lastUpdatedOn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comment".
 */
export interface Comment {
  id: string;
  sproutWellgorithm?: (string | null) | SproutWellgorithm;
  creator?: (string | null) | Creator;
  type?: (string | null) | CommentType;
  content?: string | null;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  deleted?: ('Yes' | 'No') | null;
  deletedOn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commentType".
 */
export interface CommentType {
  id: string;
  name?: string | null;
  key?: string | null;
  description?: string | null;
  icon?: (string | null) | Media;
  image?: (string | null) | Media;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "garden".
 */
export interface Garden {
  id: string;
  name?: string | null;
  rank?: number | null;
  image?: (string | null) | Media;
  sproutWellgorithms?: (string | SproutWellgorithm)[] | null;
  seedWellgorithms?: (string | SeedWellgorithm)[] | null;
  creator?: (string | null) | Creator;
  createdOn?: string | null;
  lastUpdatedOn?: string | null;
  deleted?: ('Yes' | 'No') | null;
  deletedOn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: string;
  question?: string | null;
  answer?: string | null;
  faqType?: (string | null) | FaqType;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqType".
 */
export interface FaqType {
  id: string;
  name?: string | null;
  key?: string | null;
  description?: string | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerTVType".
 */
export interface InnerTVType {
  id: string;
  name?: string | null;
  key?: string | null;
  description?: string | null;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerTv".
 */
export interface InnerTv {
  id: string;
  title: string;
  innerTVType?: (string | null) | InnerTVType;
  resource?: InnerTvSection;
  createdOn?: string | null;
  createdBy?: (string | null) | Admin;
  lastUpdatedOn?: string | null;
  lastUpdatedBy?: (string | null) | Admin;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emailTemplates".
 */
export interface EmailTemplate {
  id: string;
  templateName?: string | null;
  type?: ('emailVerification' | 'forgotPassword' | 'invitation') | null;
  richTextContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  richTextContent_html?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policy".
 */
export interface Policy {
  id: string;
  headline?: string | null;
  subHeadline?: string | null;
  text?: string | null;
  image?: (string | null) | Media;
  colorTemplate?: (string | null) | ColorTemplate;
  url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bannerAd".
 */
export interface BannerAd {
  id: string;
  title?: string | null;
  subTitle?: string | null;
  image?: (string | null) | Media;
  buttonText?: string | null;
  buttonUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  text?: string | null;
  backgroundImage?: (string | null) | Media;
  colorTemplate?: (string | null) | ColorTemplate;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message".
 */
export interface Message {
  id: string;
  name?: string | null;
  email?: string | null;
  message?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerAcademy".
 */
export interface InnerAcademy {
  id: string;
  title?: string | null;
  section?: InnerAcademySection;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerDirectory".
 */
export interface InnerDirectory {
  id: string;
  quotes?:
    | {
        quote?: string | null;
        id?: string | null;
      }[]
    | null;
  helpText?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'ecosystem';
        value: string | Ecosystem;
      } | null)
    | ({
        relationTo: 'tag';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'zone';
        value: string | Zone;
      } | null)
    | ({
        relationTo: 'tagType';
        value: string | TagType;
      } | null)
    | ({
        relationTo: 'admin';
        value: string | Admin;
      } | null)
    | ({
        relationTo: 'colorTemplate';
        value: string | ColorTemplate;
      } | null)
    | ({
        relationTo: 'dimension';
        value: string | Dimension;
      } | null)
    | ({
        relationTo: 'invites';
        value: string | Invite;
      } | null)
    | ({
        relationTo: 'creator';
        value: string | Creator;
      } | null)
    | ({
        relationTo: 'creatorType';
        value: string | CreatorType;
      } | null)
    | ({
        relationTo: 'specialeco';
        value: string | Specialeco;
      } | null)
    | ({
        relationTo: 'wellgorithmAction';
        value: string | WellgorithmAction;
      } | null)
    | ({
        relationTo: 'cocoon';
        value: string | Cocoon;
      } | null)
    | ({
        relationTo: 'wellgorithmType';
        value: string | WellgorithmType;
      } | null)
    | ({
        relationTo: 'seedWellgorithm';
        value: string | SeedWellgorithm;
      } | null)
    | ({
        relationTo: 'sproutWellgorithm';
        value: string | SproutWellgorithm;
      } | null)
    | ({
        relationTo: 'innerAIHumometer';
        value: string | InnerAIHumometer;
      } | null)
    | ({
        relationTo: 'comment';
        value: string | Comment;
      } | null)
    | ({
        relationTo: 'commentType';
        value: string | CommentType;
      } | null)
    | ({
        relationTo: 'garden';
        value: string | Garden;
      } | null)
    | ({
        relationTo: 'faq';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'faqType';
        value: string | FaqType;
      } | null)
    | ({
        relationTo: 'innerTVType';
        value: string | InnerTVType;
      } | null)
    | ({
        relationTo: 'innerTv';
        value: string | InnerTv;
      } | null)
    | ({
        relationTo: 'emailTemplates';
        value: string | EmailTemplate;
      } | null)
    | ({
        relationTo: 'policy';
        value: string | Policy;
      } | null)
    | ({
        relationTo: 'bannerAd';
        value: string | BannerAd;
      } | null)
    | ({
        relationTo: 'footer';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'platformIcon';
        value: string | PlatformIcon;
      } | null)
    | ({
        relationTo: 'color';
        value: string | Color;
      } | null)
    | ({
        relationTo: 'message';
        value: string | Message;
      } | null)
    | ({
        relationTo: 'innerAcademy';
        value: string | InnerAcademy;
      } | null)
    | ({
        relationTo: 'innerDirectory';
        value: string | InnerDirectory;
      } | null)
    | ({
        relationTo: 'stack';
        value: string | Stack;
      } | null)
    | ({
        relationTo: 'stackIcon';
        value: string | StackIcon;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'admin';
        value: string | Admin;
      }
    | {
        relationTo: 'creator';
        value: string | Creator;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'admin';
        value: string | Admin;
      }
    | {
        relationTo: 'creator';
        value: string | Creator;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ecosystem_select".
 */
export interface EcosystemSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  image?: T;
  icon?: T;
  rank?: T;
  colorTemplate?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tag_select".
 */
export interface TagSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  type?: T;
  tagTitles?:
    | T
    | {
        tagTitle?: T;
        id?: T;
      };
  creator?: T;
  rank?: T;
  sentiment?: T;
  icon?: T;
  image?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zone_select".
 */
export interface ZoneSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  image?: T;
  icon?: T;
  rank?: T;
  usage?: T;
  ecosystem?: T;
  colorTemplate?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  weedSeedPreference?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tagType_select".
 */
export interface TagTypeSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin_select".
 */
export interface AdminSelect<T extends boolean = true> {
  role?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colorTemplate_select".
 */
export interface ColorTemplateSelect<T extends boolean = true> {
  name?: T;
  image?: T;
  icon?: T;
  rank?: T;
  default_monochrome?: T;
  colorGroup?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dimension_select".
 */
export interface DimensionSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  collectionOfTags?: T;
  rank?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  slider?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invites_select".
 */
export interface InvitesSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  email?: T;
  prefferedPassword?: T;
  inspiration?: T;
  approved?: T;
  rejected?: T;
  rejectedReason?: T;
  creatorType?: T;
  dateRequested?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  creator?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creator_select".
 */
export interface CreatorSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  prefferedPassword?: T;
  welcomeMessage?: T;
  inspiration?: T;
  avatar?: T;
  username?: T;
  creatorType?: T;
  germinatedBy?: T;
  rank?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  lastLoggedInOn?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creatorType_select".
 */
export interface CreatorTypeSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  makeDefault?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "specialeco_select".
 */
export interface SpecialecoSelect<T extends boolean = true> {
  name?: T;
  shortDescription?: T;
  longDescription?: T;
  icon?: T;
  image?: T;
  rank?: T;
  ecosystem?: T;
  zoneSize?: T;
  iboundaryDescription?: T;
  oboundaryDescription?: T;
  starsDescription?: T;
  allowPrivacy?: T;
  wellgorithmActions?:
    | T
    | {
        actions?: T;
        id?: T;
      };
  usageCount?: T;
  enabled?: T;
  compulsory?: T;
  createdOn?: T;
  createdBy?: T;
  updatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wellgorithmAction_select".
 */
export interface WellgorithmActionSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  icon?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cocoon_select".
 */
export interface CocoonSelect<T extends boolean = true> {
  specialeco?: T;
  creator?: T;
  name?: T;
  description?: T;
  welcomeMessage?: T;
  image?: T;
  landscape?: T;
  thumbnail?: T;
  icon?: T;
  rank?: T;
  step?: T;
  zones?:
    | T
    | {
        zone?: T;
        position?: T;
        id?: T;
      };
  colorTemplate?: T;
  innerBoundaries?:
    | T
    | {
        innerTag?: T;
        position?: T;
        id?: T;
      };
  outerBoundaries?:
    | T
    | {
        outerTag?: T;
        position?: T;
        id?: T;
      };
  stars?:
    | T
    | {
        starTag?: T;
        position?: T;
        id?: T;
      };
  privacy?: T;
  monochrome?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wellgorithmType_select".
 */
export interface WellgorithmTypeSelect<T extends boolean = true> {
  name?: T;
  numberOfTitles?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seedWellgorithm_select".
 */
export interface SeedWellgorithmSelect<T extends boolean = true> {
  titles?: T;
  titles_concat?: T;
  wellgorithmType?: T;
  sub_title?: T;
  icon?: T;
  image?: T;
  intention?: T;
  points?: T;
  pointsType?: T;
  rank?: T;
  usageCount?: T;
  ecosystem?: T;
  zone?: T;
  cocoon?: T;
  wellgorithmActions?:
    | T
    | {
        actions?: T;
        id?: T;
      };
  stack?: T;
  adminCreated?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  deleted?: T;
  deletedOn?: T;
  creator?: T;
  year?: T;
  isMaster?: T;
  masterSeed?: T;
  symbol?: T;
  weedSeedPreference?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sproutWellgorithm_select".
 */
export interface SproutWellgorithmSelect<T extends boolean = true> {
  seedWelgorithm?: T;
  intention?: T;
  title?: T;
  subTitle?: T;
  contents?:
    | T
    | {
        content?: T;
        id?: T;
      };
  innerAIHumometer?: T;
  icon?: T;
  image?: T;
  points?: T;
  pointsType?: T;
  stack?: T;
  colorTemplate?: T;
  weatherTag?: T;
  generalTags?: T;
  privacy?: T;
  contributors?: T;
  rank?: T;
  creator?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  deleted?: T;
  deletedOn?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerAIHumometer_select".
 */
export interface InnerAIHumometerSelect<T extends boolean = true> {
  sproutWellgorithm?: T;
  name?: T;
  bigIdea?: T;
  mainPoints?: T;
  factNFlourishes?: T;
  editing?: T;
  finalPolish?: T;
  average?: T;
  createdOn?: T;
  creator?: T;
  lastUpdatedOn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comment_select".
 */
export interface CommentSelect<T extends boolean = true> {
  sproutWellgorithm?: T;
  creator?: T;
  type?: T;
  content?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  deleted?: T;
  deletedOn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commentType_select".
 */
export interface CommentTypeSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  icon?: T;
  image?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "garden_select".
 */
export interface GardenSelect<T extends boolean = true> {
  name?: T;
  rank?: T;
  image?: T;
  sproutWellgorithms?: T;
  seedWellgorithms?: T;
  creator?: T;
  createdOn?: T;
  lastUpdatedOn?: T;
  deleted?: T;
  deletedOn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  faqType?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqType_select".
 */
export interface FaqTypeSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerTVType_select".
 */
export interface InnerTVTypeSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerTv_select".
 */
export interface InnerTvSelect<T extends boolean = true> {
  title?: T;
  innerTVType?: T;
  resource?: T | InnerTvSectionSelect<T>;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerTvSection_select".
 */
export interface InnerTvSectionSelect<T extends boolean = true> {
  youtubeVideos?: T | InnerTvYoutubeVideoSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerTvYoutubeVideo_select".
 */
export interface InnerTvYoutubeVideoSelect<T extends boolean = true> {
  youtubeLink?: T;
  title?: T;
  thumbnail?: T;
  description?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emailTemplates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  templateName?: T;
  type?: T;
  richTextContent?: T;
  richTextContent_html?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policy_select".
 */
export interface PolicySelect<T extends boolean = true> {
  headline?: T;
  subHeadline?: T;
  text?: T;
  image?: T;
  colorTemplate?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bannerAd_select".
 */
export interface BannerAdSelect<T extends boolean = true> {
  title?: T;
  subTitle?: T;
  image?: T;
  buttonText?: T;
  buttonUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  text?: T;
  backgroundImage?: T;
  colorTemplate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tag?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platformIcon_select".
 */
export interface PlatformIconSelect<T extends boolean = true> {
  tag?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        icon?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color_select".
 */
export interface ColorSelect<T extends boolean = true> {
  colorName?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message_select".
 */
export interface MessageSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerAcademy_select".
 */
export interface InnerAcademySelect<T extends boolean = true> {
  title?: T;
  section?: T | InnerAcademySectionSelect<T>;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InnerAcademySection_select".
 */
export interface InnerAcademySectionSelect<T extends boolean = true> {
  title?: T;
  subTitle?: T;
  policy?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innerDirectory_select".
 */
export interface InnerDirectorySelect<T extends boolean = true> {
  quotes?:
    | T
    | {
        quote?: T;
        id?: T;
      };
  helpText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stack_select".
 */
export interface StackSelect<T extends boolean = true> {
  name?: T;
  leftIcon?: T;
  tags?: T;
  rightIcon?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stackIcon_select".
 */
export interface StackIconSelect<T extends boolean = true> {
  name?: T;
  icon?: T;
  type?: T;
  createdOn?: T;
  createdBy?: T;
  lastUpdatedOn?: T;
  lastUpdatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  // @ts-ignore 
  export interface GeneratedTypes extends Config {}
}